@using EmployeeTask.Helpers;
@using EmployeeTask.Models;
@{
    ViewData["Title"] = "Home Page";
    var pager = ViewBag.pager as Pagination;
}

<div class="container">
   <h3 class="text-primary">Employees</h3>
   <br />

   <button type="button" class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#AddEmployee">
      Add Employee
   </button>

   <table id="Employees" class="table table-responsive table-striped table-bordered nowrap w-100" style="width:100%;">
      <thead>
         <tr>
            <th>Name</th>
            <th>Age</th>
            <th>Addresses</th>
            <th>Actions</th>
         </tr>
      </thead>
      <tbody>
            @foreach (var emp in pager.EmployeeDtos)
            {
             <tr id="employeeId_@emp.Id">
                <td>
                   <input id="employee_@emp.Id" class="d-none" value="@emp.Id" />
                   @emp.Name
                </td>
                <td>@emp.Age</td>
                <td>
                   <ul class="list-group">
                      @foreach (var addr in emp.Addresses)
                         {
                             @*<li id="employeeAddress_@addr.Id" class="d-none">@addr.Id</li>*@
                             <li class="list-group-item p-0">
                                <div class="d-flex bd-highlight p-0">
                                   <div class="p-1 flex-grow-1 bd-highlight">@addr.Description</div>
                                   <div class="p-0 bd-highlight">
                                       <button type="button" 
                                          class="btn  btn-sm btn-outline-success d-block h-100 rounded-0 edit-employee-address" 
                                          data-bs-toggle="modal" data-bs-target="@("#editAddress" + addr.Id)" 
                                          data-addressId="@addr.Id">Edit</button>
                                          @await Html.PartialAsync("_AddressEditForm", new AddressEdit { Id = addr.Id, Description = addr.Description })
                                   </div>
                                   <div class="p-0 bd-highlight">
                                      <button type="button" class="btn  btn-sm btn-outline-danger d-block h-100 rounded-0 delete-employee-address"
                                      data-bs-toggle="modal" data-bs-target="@("#deleteAddress" + addr.Id)"
                                      data-addressId="@addr.Id">Remove</button>
                                      @await Html.PartialAsync("_AddressDeleteForm", new AddressEdit { Id = addr.Id, Description = addr.Description })
                                   </div>
                                </div>
                             </li>
                         }
                   </ul>
                </td>
                <td>
                   <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="@("#editEmployee" + emp.Id)">
                      Edit
                   </button>

                   @await Html.PartialAsync("_EmployeeEditForm", new EmployeeEdit { Id = emp.Id, Name = emp.Name, Age = emp.Age })
                   
                   <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="@("#deleteEmployee" + emp.Id)">
                      Delete
                   </button>
                   @await Html.PartialAsync("_EmployeeDeleteForm", new EmployeeEdit { Id = emp.Id, Name = emp.Name, Age = emp.Age })
                </td>
             </tr>
            }
      </tbody>
   </table>
    @if (pager.TotalPages > 0)
    {
       <ul class="pagination justify-content-end">

            @if (pager.CurrentPage > 1)
            {
              <li class="page-item">
                 <a class="page-link" asp-action="Index" asp-controller="Employee" asp-route-pg="1">First</a>
              </li>
              <li class="page-item">
                 <a class="page-link" asp-action="Index" asp-controller="Employee" asp-route-pg="@(pager.CurrentPage - 1)"> Prev </a>
              </li>
            }

            @for (int pge = pager.StartPage; pge <= pager.EndPage; pge++)
            {
              <li class="page-item @(pge == pager.CurrentPage ? "active": "")">
                 <a class="page-link" asp-action="Index" asp-controller="Employee" asp-route-pg="@pge"> @pge </a>
              </li>
            }

            @if (pager.CurrentPage < pager.TotalPages)
            {
              <li class="page-item">
                 <a class="page-link" asp-action="Index" asp-controller="Employee" asp-route-pg="@(pager.CurrentPage + 1)"> Next </a>
              </li>
              <li class="page-item">
                 <a class="page-link" asp-action="Index" asp-controller="Employee" asp-route-pg="@pager.TotalPages">Last</a>
              </li>

            }
       </ul>
    }
</div>
@await Html.PartialAsync("_EmployeeAddForm", new EmployeeCreate())


@section Scripts {
    <script src="~/lib/datatables/js/jquery.datatables.min.js"></script>
    <script src="~/lib/datatables/js/dataTables.bootstrap4.min.js"></script>

    <script src="~/js/Employees.js"></script>
}
